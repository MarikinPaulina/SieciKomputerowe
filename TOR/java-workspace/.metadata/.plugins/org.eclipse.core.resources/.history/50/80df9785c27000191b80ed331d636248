import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketTimeoutException;
import java.util.ArrayList;

import org.json.JSONObject;
import org.json.simple.JSONArray;
import org.json.simple.parser.JSONParser;

public class Nodes {
	static int PORT = 9999;
	static int BUFFER_SIZE = 256;
	JSONParser parser = new JSONParser();
	
	public static void main(String[] args) throws Exception{
		ArrayList<InetAddress> inetAddress = new ArrayList<InetAddress>();
		ArrayList<Integer> ports = new ArrayList<Integer>();

        DatagramSocket datagramSocket = new DatagramSocket(PORT);

        byte[] byteResponse;

        while (true){

            DatagramPacket receivedPacket = new DatagramPacket( new byte[BUFFER_SIZE], BUFFER_SIZE);

            datagramSocket.receive(receivedPacket);

            int length = receivedPacket.getLength(); 
            
            String messageReceived = new String(receivedPacket.getData(), 0, length, "utf8");
            Object obj = parser.parse(messageReceived);
            JSONArray array = (JSONArray)obj;
            

            inetAddress.add( receivedPacket.getAddress() );
            ports.add( receivedPacket.getPort() );

            System.out.println(message);
            Thread.sleep(1000); //To oczekiwanie nie jest potrzebne dla
            // obs≈Çugi gniazda

            //DatagramPacket response= new DatagramPacket(byteResponse, byteResponse.length, address, port);

            //datagramSocket.send(response);
        }
    }
}

